@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using BlazorSignalRSample.Client.Services;

@inject HttpClient _httpClient
@inject IAccessTokenProvider _accessTokenProvider
@inject SignalRService _signalRService

@if (history?.Length > 0) {
    <MatListGroup>
        <MatListGroupSubHeader>Zuletzt gespielte Runden:</MatListGroupSubHeader>
        <MatList SingleSelection="true" TwoLine="true">
            @foreach (var entry in history)
            {
                <MatListItem>
                    <MatListItemText>
                        @if(entry.GameResult == "Loose") {
                            <MatListItemPrimaryText>Verloren gegen @entry.Opponent</MatListItemPrimaryText>
                        } else if (entry.GameResult == "Tie"){
                            <MatListItemPrimaryText>Unentschieden gegen @entry.Opponent</MatListItemPrimaryText>
                        } else {
                            <MatListItemPrimaryText>Gewonnen gegen @entry.Opponent</MatListItemPrimaryText>
                        }
                        <MatListItemSecondaryText>@entry.SessionDate.ToShortDateString() @entry.SessionDate.ToShortTimeString()</MatListItemSecondaryText>
                    </MatListItemText>
                </MatListItem>
            }
        </MatList>
    </MatListGroup>
}

@code{
    private GameHistory[] history;
    protected override async Task OnInitializedAsync() 
    {
        var accessTokenValue = await _accessTokenProvider.RequestAccessToken();
        if (accessTokenValue.Status == AccessTokenResultStatus.Success) 
        {
            history = await _httpClient.GetFromJsonAsync<GameHistory[]>("GamesHistory");
            _signalRService.GameOver += async (sender, data) => await OnGameOver(sender, data);
        }
    }

    private async Task OnGameOver(object sender, Services.GameOverEventArgs data) 
    {
        Console.WriteLine("Game over is thrown", data.WinnerId);
        if (data.WinnerId != "Lost") 
        {
            history = await _httpClient.GetFromJsonAsync<GameHistory[]>("GamesHistory");
            StateHasChanged();
        }
    }
}